name: Publish Manually

on:
  workflow_dispatch:

jobs:
  extract_jar_files:
    runs-on: ubuntu-latest
    outputs:
      jar_files: ${{ steps.find_jar_files.outputs.jar_files }}
      workflow_run_id: ${{ steps.get_workflow_run_id.outputs.workflow_run_id }}
    steps:
      - name: Get latest "Build and Test" workflow run ID
        id: get_workflow_run_id
        run: |
          API_URL="https://api.github.com/repos/FNewel/keepxp/actions/workflows/build.yml/runs?per_page=1"
          RUN_ID=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" "$API_URL" | jq -r '.workflow_runs[0].id')
          echo "workflow_run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          run-id: ${{ steps.get_workflow_run_id.outputs.workflow_run_id }}
          github-token: ${{ secrets.GIT_TOKEN }}
          name: Artifacts
          path: ./downloaded

      - name: List downloaded contents
        run: |
          echo "==== Downloaded Artifact Contents ===="
          find ./downloaded -type f

      - name: Find JAR file names
        id: find_jar_files
        run: |
          echo "==== Searching for JARs ===="
          JAR_FILES=$(find ./downloaded -type f -path "*/build/libs/*.jar" -name "keep-xp*.jar" ! -name "*-sources.jar" -exec basename {} \; | grep .)
          echo "Found:"
          echo "$JAR_FILES"
          
          FILE_LIST=$(echo "$JAR_FILES" | awk NF | paste -sd ',' - | sed 's/,/","/g' | sed 's/^/\"/' | sed 's/$/\"/')
          echo "Final JSON array: [$FILE_LIST]"
          echo "jar_files=[$FILE_LIST]" >> $GITHUB_OUTPUT

  publish:
    needs: extract_jar_files
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        jar_file: ${{ fromJson(needs.extract_jar_files.outputs.jar_files) }}
    name: Publish (${{ matrix.jar_file }})

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          run-id: ${{ needs.extract_jar_files.outputs.workflow_run_id }}
          github-token: ${{ secrets.GIT_TOKEN }}
          name: Artifacts
          path: ./downloaded

      - name: Confirm downloaded files
        run: |
          echo "==== Confirming downloaded files ===="
          find ./downloaded -type f

      - name: Extract mod version and game versions
        id: extract_versions
        run: |
          JAR_FILE_NAME="${{ matrix.jar_file }}"
          echo "Searching for: $JAR_FILE_NAME"

          JAR_PATH=$(find ./downloaded -type f -name "$JAR_FILE_NAME" | head -n 1)
          echo "Located JAR path: $JAR_PATH"

          if [[ ! -f "$JAR_PATH" ]]; then
            echo "::error::JAR file does not exist: $JAR_PATH"
            exit 1
          fi

          mod_version=$(basename "$JAR_PATH" | sed -E 's/keep-xp-([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "Extracted mod_version: $mod_version"

          MC_VERSIONS=$(basename "$JAR_PATH" | grep -oP '(?<=\+)\d+\.\d+(\.\d+)?(-\d+\.\d+(\.\d+)?)*')
          IFS='-' read -r -a mc_versions_array <<< "$MC_VERSIONS"

          if [[ ${#mc_versions_array[@]} -eq 1 ]]; then
            game_versions="${mc_versions_array[0]}"
          else
            game_versions="${mc_versions_array[0]}-${mc_versions_array[1]}"
          fi

          echo "mod_version=$mod_version" >> $GITHUB_OUTPUT
          echo "game_version=$game_versions" >> $GITHUB_OUTPUT
          echo "file=$JAR_PATH" >> $GITHUB_OUTPUT

      - name: Publish to Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          fail-mode: warn
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          changelog-file: ./downloaded/CHANGELOG.md
          files: ${{ steps.extract_versions.outputs.file }}
          name: Keep XP ${{ steps.extract_versions.outputs.game_version }} v${{ steps.extract_versions.outputs.mod_version }}

      - name: Publish to Github
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          fail-mode: warn
          github-token: ${{ secrets.GIT_TOKEN }}
          changelog-file: ./downloaded/CHANGELOG.md
          files: ${{ steps.extract_versions.outputs.file }}
          name: Keep XP v${{ steps.extract_versions.outputs.mod_version }}
